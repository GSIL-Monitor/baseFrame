<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-4.0.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
                        http://www.springframework.org/schema/aop 
     					http://www.springframework.org/schema/aop/spring-aop.xsd">  
    <context:property-placeholder location="classpath*:config.properties,classpath:constant.properties"/>
    
    <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
    <context:component-scan base-package="com.tuniu" >
    	<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 集成ehcache缓存 -->
    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
    	<property name="configLocation" value="classpath:shiro-ehcache.xml"></property>
    </bean>
      
    <!-- 自定义转换器 -->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    	<property name="converters">
    		<list>
    			<bean class="com.tuniu.common.converter.DateConverter"/>
    			<bean class="com.tuniu.common.converter.StringTrimConverter"/>   			
    		</list>
    	</property>
    </bean>
    
    <!-- 校验器 -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
    	<property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
    	<property name="validationMessageSource" ref="messageSource"/>
    </bean>
    
    <!-- 校验错误信息配置文件 -->
    <bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
    	<property name="basenames">
    		<list>
    			<value>classpath:validatorMessages</value>
    		</list>   		
    	</property>
    	<property name="fileEncodings" value="utf-8"/>
    	<!-- 对资源文件内容缓存时间，单位秒 -->
    	<property name="cacheSeconds" value="120"/>
    </bean>
    
    <!-- 自定义拦截器 -->
    <mvc:interceptors>
        <mvc:interceptor>       	
            <mvc:mapping path="/**"/>
            <bean class="com.tuniu.common.interceptor.SecurityInterceptor" />
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- 自动加载RequestMappingHandlerMapping和RequestMappingHandlerAdapter,替代注解处理器和适配器的配置 -->
    <mvc:annotation-driven validator="validator" conversion-service="conversionService">
		<mvc:argument-resolvers>
			<bean class="com.tuniu.app.support.ParamsArgumentResolver"></bean>
		</mvc:argument-resolvers>
		<mvc:message-converters register-defaults="true">
		<bean class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
			<property name="prefixJson" value="false"/>
			<property name="supportedMediaTypes">
				<list>
					<value>application/json</value>
					<value>text/json</value>
				</list>
			</property>
		</bean>
		</mvc:message-converters>  
    </mvc:annotation-driven>
    
    <!--放过静态文件-->
    <mvc:default-servlet-handler />
    <!-- <mvc:resources mapping="/res/**" location="/res/" />  --> 
    
    <!-- 定义跳转的文件的前后缀 ，视图模式配置-->  
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" >  
        <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
    </bean> 
    
    <bean id="multipartResolver" class="com.tuniu.upload.listener.UploadCommonsMultipartResolver">  
        <property name="defaultEncoding" value="utf-8" />  
        <property name="maxUploadSize" value="10485760000" />    
        <property name="maxInMemorySize" value="40960" />          
    </bean>  
    
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包  
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <property name="defaultEncoding" value="utf-8" />    
        <property name="maxUploadSize" value="10485760000" />    
        <property name="maxInMemorySize" value="40960" />    
    </bean>   
     -->
    <!-- 统一异常处理 -->
    <bean class="com.tuniu.common.exception.CustomExceptionResolver"></bean>
    
    <aop:config proxy-target-class="true"></aop:config>
    <!-- 开启shiro注解支持 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
    	<property name="securityManager" ref="securityManager"></property>
    </bean>  
    
    <!-- import resource="classpath*:spring-quartz.xml"/ -->
    <import resource="classpath:log.xml"/>
  
</beans>  