<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xsi:schemaLocation="http://www.springframework.org/schema/beans  
    	http://www.springframework.org/schema/beans/spring-beans.xsd 
    	http://www.springframework.org/schema/util 
    	http://www.springframework.org/schema/util/spring-util.xsd
    	http://www.springframework.org/schema/aop 
     	http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!-- 自定义退出路径 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
    	<property name="redirectUrl" value="/common/main/login"></property>
    </bean>
    
    <!-- 自定义的表单认证过虑器-->
    <bean id="formAuthenticationFilter" class="com.tuniu.common.filter.LoginFormAuthenticationFilter">
    	<property name="usernameParam" value="username"></property>
    	<property name="passwordParam" value="password"></property>
    	<property name="rememberMeParam" value="rememberMe"></property>
    </bean>
    <!-- shiro的过滤器 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<property name="securityManager" ref="securityManager"></property>
    	<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
    	<property name="loginUrl" value="/common/main/login"/>    	   	
    	<property name="successUrl" value="/common/main/index"/>    	   	
    	<property name="unauthorizedUrl" value="/common/main/refuse"/>
    	<property name="filters">
		   <util:map>
		    <entry key="authc" value-ref="formAuthenticationFilter"/>
		    <entry key="logout" value-ref="logoutFilter"/>
		   </util:map>
		</property>
    	<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
    	<property name="filterChainDefinitions">
    		<value>
    			<!-- 退出拦截，请求logout.action执行退出操作 -->
    			/logout = logout
    			<!-- 匿名访问 -->
    			/public/** = anon   			   			
    			/res/** = anon   			
    			/validatecode.jsp = anon 			
    			/app/** = anon
    			<!-- 配置rememberMe或认证通过可以访问的地址-->  
    			/common/main/index = user   						
    			<!-- 表示身份认证通过或通过记住我认证通过的可以访问-->
    			/common/main/login = authc
    			/** = authc 
    			
    		</value>
    	</property>
    </bean>
    
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
    	<property name="realm" ref="userRealm"/> 
    	<property name="cacheManager" ref="cacheManager"></property>
    	<property name="sessionManager" ref="sessionManager"></property>   
    	<property name="rememberMeManager" ref="rememberMeManager"></property>   
    </bean>
    
    <!-- rememberMeManager管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
    	<property name="cookie" ref="rememberMeCookie"></property>
    </bean>
    
    <!-- 记住我cookie -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
    	<constructor-arg value="rememberMe"/>
    	<!-- cookie生效时间30天 -->
    	<property name="maxAge" value="2592000"></property>
    </bean>
    
    <!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    	<!-- 失效时长(10分钟)，单位毫秒 -->
    	<property name="globalSessionTimeout" value="600000"/>
    	<!-- 删除失效的session -->
    	<property name="deleteInvalidSessions" value="true"></property>
    </bean>
    
    <!-- 缓存管理器 -->
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"></property>
    </bean>
    
    <!-- 自定义的realm -->
    <bean id="userRealm" class="com.tuniu.common.realm.CustomRealm">
    	<property name="credentialsMatcher" ref="credentialsMatcher"></property>
    </bean>
    
    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
    	<property name="hashAlgorithmName" value="md5"></property>
    	<property name="hashIterations" value="1"></property>
    </bean> 
</beans>